#!/usr/bin/env node

// Dependencies
var app = require('./src/main')
, forever = require('forever-monitor')
, config = require('./config')
, cmd = require('commander')
, http = require('http')

// Variables
var io, server, port

cmd
.version('0.1.42')
.option('-p, --port <n>', 'Port to start the HTTP server', parseInt)
.parse(process.argv)

// parse port and set variable
port = cmd.port || config.port
app.set('port', port)

// Launch server with web sockets
server = http.createServer(app)
io = require('socket.io')(server)

// Listen on provided port, on all network interfaces.
server.listen(port)

server.on('listening', function () {
  console.log('xway dashboard started on %s:%s', 
    server.address().address,
    server.address().port)
})

server.on('error', function (error) {
  if (error.syscall !== 'listen') {
    throw error
  }
  var bind = typeof port === 'string'
  ? 'Pipe ' + port
  : 'Port ' + port
  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
    console.error(bind + ' requires elevated privileges')
    process.exit(1)
    break
    case 'EADDRINUSE':
    console.error(bind + ' is already in use')
    process.exit(1)
    break
    default:
    throw error
  }
})

// process.on('uncaughtException', function (error) {
//    io.emit('stderr', '' + error)
//    console.trace(error)
// })

// Start the deamon that recognises other xways
var deamon = new (forever.Monitor)('bin/deamon.js')
deamon.start()

exports.io = io
exports.server = server
